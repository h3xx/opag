/* This file is part of opag, an option parser generator.
   Copyright (C) 2003, 2004, 2005 Martin Dickopp

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
   USA.  */

#ifdef HAVE_CONFIG_H
# include <config.h>
#endif
#include "stdinc.h"

#include <stdio.h>


%%

g glibc            "generate code that makes use of GNU libc functionality if available"
G gcc              "generate code that makes use of GCC functionality if available"
C cxx              "generate C++ code instead of C code"
s struct           "[=TAG]        use struct with tag TAG (default: `options') instead of global variables"                                    optarg
f function-name    "=IDENTIFIER   use IDENTIFIER as function name instead of `parse_options'"                                                  reqarg
  nls-error-text   "[=IDENTIFIER] when generating C code, wrap each error text macro in call to function IDENTIFIER (default: `gettext')"      optarg
  nls-help-strings "[=IDENTIFIER] when generating C code, wrap each help string macro in call to function IDENTIFIER (default: `gettext')"     optarg
  nls-help-text    "[=IDENTIFIER] when generating C code, wrap complete help string macro in call to function IDENTIFIER (default: `gettext')" optarg
e exception-name   "=TYPENAME     when generating C++ code, throw TYPENAME instead of `::std::runtime_error'"                                  reqarg
n namespace        "=IDENTIFIER   put generated C++ code into namespace IDENTIFIER"                                                            reqarg
O option-prefix    "=PREFIX       prefix option variables with PREFIX instead of `opt_'"                                                       reqarg
A argument-prefix  "=PREFIX       prefix argument variables with PREFIX instead of `arg_'"                                                     reqarg
  help             "display this help text and exit"                                                                                           return
  version          "display version information and exit"                                                                                      return

%%


/* Text to display in response to the --help command line option.  */
const char *const usage_text = "\
Usage: %s [OPTION]... [INPUT-FILE [CODE-OUTPUT-FILE [HEADER-OUTPUT-FILE]]]\n\
Generate C code to parse command line options.\n\n\
Options:\n" STR_HELP "\n\
Please report bugs to <" PACKAGE_BUGREPORT ">.\n";

/* Text to display in response to the --version command line option.  */
const char *const version_text =
PACKAGE_STRING "\n\
Copyright (C) 2002, 2003, 2004, 2005 Martin Dickopp\n\n\
This program is free software; it may be copied and/or modified under the\n\
terms of the GNU General Public License version 2 or (at your option) any\n\
later version; see the file COPYING in the source package for details. There\n\
is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\
PURPOSE.\n";
